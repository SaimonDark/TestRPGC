Public Class Map
  ReadOnly _txtRGB As New SystemColorConsole
  Public _hero As New Hero
  Public _nameLocation, _messegLocation As String
  Public fontprint, backprint, printset As String

  Public _local0 As Integer(,) = {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                              {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                              {0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                              {0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                              {0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                              {0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                              {0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                              {0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0},
                              {0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0},
                              {0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0},
                              {0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0},
                              {0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0},
                              {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 2, 2, 0},
                              {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 0},
                              {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}} 'Начальная карта

  ReadOnly _hillMap0 As Integer(,) = {{2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                                      {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                                      {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                                      {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                                      {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                                      {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                                      {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                                      {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                                      {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                                      {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                                      {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                                      {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                                      {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                                      {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                                      {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2}} 'Туман начальной карты

  Public _hillConst As Integer(,) = {{2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                                     {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                                     {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                                     {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                                     {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                                     {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                                     {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                                     {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                                     {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                                     {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                                     {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                                     {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                                     {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                                     {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                                     {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                                     {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                                     {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                                     {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2}}

  Public _hillStatic As Integer(,) = {{2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                                     {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                                     {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                                     {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                                     {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                                     {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                                     {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                                     {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                                     {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                                     {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                                     {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                                     {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                                     {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                                     {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                                     {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                                     {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                                     {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                                     {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2}}

  Public _local1 As Integer(,) = {{1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                                     {1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                                     {1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                                     {0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 2, 1, 6, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                                     {0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 3, 3, 8, 0, 0, 0, 0, 2, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0},
                                     {0, 0, 0, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 8, 3, 3, 3, 3, 8, 0, 0, 0, 0, 2, 2, 2, 1, 1, 2, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 4, 5, 5, 4, 0, 0, 0, 0, 0, 0, 0},
                                     {0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 8, 3, 3, 7, 7, 3, 3, 8, 0, 0, 0, 0, 0, 0, 2, 1, 1, 0, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 5, 5, 5, 5, 4, 0, 0, 0, 0, 0, 0},
                                     {0, 0, 0, 0, 0, 0, 2, 1, 2, 0, 0, 0, 0, 3, 3, 3, 7, 3, 3, 3, 8, 8, 0, 8, 8, 8, 0, 0, 0, 1, 2, 0, 0, 0, 2, 1, 2, 0, 0, 0, 4, 5, 5, 5, 5, 4, 0, 0, 0, 0, 0, 0},
                                     {0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 8, 8, 8, 3, 3, 3, 8, 8, 8, 8, 3, 3, 3, 8, 0, 0, 1, 1, 2, 0, 2, 1, 1, 0, 0, 0, 0, 0, 4, 5, 5, 4, 0, 0, 0, 0, 0, 0, 0},
                                     {0, 0, 0, 0, 3, 3, 0, 0, 0, 2, 1, 1, 1, 0, 0, 0, 8, 8, 8, 0, 0, 8, 3, 3, 7, 3, 3, 8, 0, 2, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0},
                                     {0, 0, 0, 3, 3, 3, 3, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 8, 3, 3, 3, 3, 8, 0, 0, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                                     {0, 0, 3, 3, 7, 3, 0, 0, 0, 0, 0, 0, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 8, 3, 8, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 8, 8, 8, 8, 8, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                                     {0, 0, 3, 3, 3, 3, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 8, 3, 3, 3, 3, 3, 3, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                                     {0, 0, 0, 3, 3, 0, 0, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 0, 0, 2, 1, 2, 0, 0, 0, 0, 0, 8, 3, 3, 7, 7, 7, 3, 3, 8, 0, 0, 0, 0, 0, 2, 2, 2, 0, 0},
                                     {0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 3, 3, 3, 7, 7, 3, 3, 8, 8, 8, 0, 0, 0, 0, 2, 6, 2, 0, 0},
                                     {0, 0, 0, 0, 0, 2, 1, 6, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 8, 3, 7, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 0, 0},
                                     {0, 0, 0, 0, 0, 2, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 3, 3, 8, 8, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                                     {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}

  Public _local2 As Integer(,) = {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                                     {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                                     {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0},
                                     {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 8, 0, 0, 0, 2, 1, 1, 2, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 0, 0, 3, 3, 3, 0, 0, 0, 0, 0, 0},
                                     {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 0, 8, 3, 3, 8, 8, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 3, 3, 7, 7, 3, 0, 0, 0, 0, 0},
                                     {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 2, 0, 0, 8, 3, 7, 3, 3, 3, 8, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 7, 3, 0, 0, 0, 0, 0},
                                     {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 6, 1, 2, 0, 8, 3, 3, 3, 7, 7, 3, 3, 8, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 4, 4, 4, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 0, 0},
                                     {0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 2, 0, 0, 8, 3, 3, 7, 7, 3, 3, 3, 8, 8, 0, 0, 1, 2, 0, 0, 0, 0, 4, 4, 4, 4, 4, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0},
                                     {0, 10, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 1, 0, 8, 8, 3, 3, 3, 3, 8, 8, 8, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 11, 4, 4, 4, 0, 0, 3, 3, 3, 0, 0, 0, 0, 0},
                                     {0, 9, 10, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 8, 8, 3, 3, 8, 0, 0, 0, 1, 1, 0, 0, 1, 1, 2, 0, 0, 4, 4, 4, 4, 4, 0, 0, 0, 0, 3, 3, 3, 0, 0, 0, 0},
                                     {0, 9, 9, 10, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 8, 8, 0, 0, 2, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 0, 0},
                                     {0, 9, 9, 9, 10, 8, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 2, 1, 1, 1, 1, 2, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 7, 7, 3, 0, 0, 0, 0},
                                     {0, 10, 9, 9, 9, 10, 10, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 3, 3, 7, 7, 3, 0, 0, 0, 0, 0},
                                     {0, 8, 10, 9, 9, 9, 9, 10, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 0, 0, 0},
                                     {0, 0, 8, 10, 9, 9, 9, 9, 10, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0},
                                     {0, 0, 0, 8, 10, 9, 9, 9, 9, 10, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                                     {0, 0, 0, 0, 8, 10, 9, 9, 9, 9, 10, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                                     {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}

  Public _local3 As Integer(,) = {{3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                                     {3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 10, 9, 9, 9, 10, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                                     {3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 3, 3, 3, 8, 10, 9, 9, 9, 10, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                                     {3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 3, 3, 8, 10, 9, 9, 9, 10, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                                     {3, 3, 3, 3, 3, 2, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 3, 4, 3, 3, 3, 3, 3, 8, 10, 9, 9, 10, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                                     {3, 3, 3, 3, 3, 2, 1, 2, 2, 1, 1, 1, 1, 1, 2, 3, 4, 3, 3, 3, 3, 3, 3, 8, 10, 9, 9, 9, 10, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                                     {3, 3, 3, 3, 2, 1, 1, 3, 3, 3, 3, 3, 2, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 10, 9, 9, 10, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                                     {3, 3, 3, 2, 1, 1, 2, 3, 4, 3, 3, 3, 3, 2, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 8, 10, 9, 9, 10, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                                     {3, 3, 3, 2, 1, 2, 3, 3, 3, 4, 3, 3, 3, 2, 1, 1, 1, 2, 3, 3, 3, 3, 3, 3, 3, 8, 10, 9, 9, 10, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                                     {3, 3, 3, 3, 1, 3, 3, 3, 3, 4, 3, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 3, 8, 10, 9, 9, 10, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                                     {3, 3, 3, 3, 1, 3, 3, 3, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 2, 10, 9, 9, 9, 10, 8, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                                     {3, 3, 3, 3, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 2, 2, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0},
                                     {3, 3, 2, 2, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 3, 3, 3, 3, 3, 8, 10, 9, 9, 9, 10, 8, 0, 2, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0},
                                     {3, 3, 2, 1, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 3, 3, 3, 3, 3, 8, 10, 9, 9, 9, 10, 8, 0, 0, 1, 1, 1, 2, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 0, 0, 0, 0},
                                     {3, 3, 3, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 10, 9, 9, 10, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 2, 0, 0, 0},
                                     {3, 3, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 10, 9, 9, 10, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0},
                                     {3, 3, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 8, 10, 9, 9, 10, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 0},
                                     {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}}

  Public _local4 As Integer(,) = {{3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3},
                                     {3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3},
                                     {3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3},
                                     {3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3},
                                     {3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3},
                                     {3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3},
                                     {3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3},
                                     {3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3},
                                     {3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3},
                                     {3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3},
                                     {3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3},
                                     {3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3},
                                     {3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3},
                                     {3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3},
                                     {3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3},
                                     {3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3},
                                     {3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3},
                                     {3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3}}


  '█ ▓ ▒ ░
  'If _local1(i, j) = 0 Then _txtRGB._txtRGB("DarkGreen", "DarkGray", "░", False) 'Болотное поле 
  'If _local1(i, j) = 0 Then _txtRGB._txtRGB("DarkGreen", "Black", "░", False) 'Болото
  'If _local1(i, j) = 1 Then _txtRGB._txtRGB("DarkYellow", "DarkGray", "▓", False) 'Дорога
  'If _local1(i, j) = 0 Then _txtRGB._txtRGB("DarkGray", "DarkGreen", "▓", False) 'Самый оптимальный вариант травингистой земли
  'If _local1(i, j) = 0 Then _txtRGB._txtRGB("Black", "DarkGray", "░", False) 'Скалисто-каменная местность
  'If _local1(i, j) = 0 Then _txtRGB._txtRGB("White", "Cyan", "░", False) 'Речная местность
  'If _local1(i, j) = 0 Then _txtRGB._txtRGB("White", "Cyan", "▓", False) 'Заснеженность
  'If _local1(i, j) = 0 Then _txtRGB._txtRGB("White", "DarkBlue", "░", False) 'Водная местность
  'If _local1(i, j) = 0 Then _txtRGB._txtRGB("Cyan", "DarkBlue", "▒", False) 'Тонкий лёд
  'If _local1(i, j) = 0 Then _txtRGB._txtRGB("Cyan", "DarkGreen", "░", False) 'Лес
  'If _local1(i, j) = 0 Then _txtRGB._txtRGB("DarkRed", "DarkYellow", "▓", False) 'Лава
  'If _local1(i, j) = 0 Then _txtRGB._txtRGB("Black", "DarkMagenta", "▓", False) 'Стены городов
  'If _local1(i, j) = 0 Then _txtRGB._txtRGB("DarkYellow", "Black", "░", False) 'Стены городов Людей
  'If _local1(i, j) = 0 Then _txtRGB._txtRGB("DarkGreen", "Black", "░", False) 'Стены городов Эльфов
  'If _local1(i, j) = 0 Then _txtRGB._txtRGB("DarkGray", "Black", "░", False) 'Стены городов Гномов
  'If _local1(i, j) = 0 Then _txtRGB._txtRGB("DarkMagenta", "Black", "▓", False) 'Степень заражённых земель
  'If _local1(i, j) = 0 Then _txtRGB._txtRGB("DarkRed", "Black", "░", False) 'граница
  'If _local1(i, j) = 0 Then _txtRGB._txtRGB("Red", "Black", "░", False) 'Затвердевшая лава
  'If _local1(i, j) = 0 Then _txtRGB._txtRGB("Blue", "Black", "░", False) 'Глубокие воды

  Public Sub BeginMap(ByVal _x As Integer, ByVal _y As Integer) 'Туториал локация.

    Dim i, j As Integer
    Console.Write("              ")

    For i = 0 To 15
      For j = 0 To 31
        If _x = j And _y = i Then
          _txtRGB.TxtRGB(fontprint, backprint, printset, False)

          Try
            'Стирание ближней границы
            _hillMap0(i, j - 1) -= 2
            _hillMap0(i - 1, j - 1) -= 2
            _hillMap0(i + 1, j - 1) -= 2
            _hillMap0(i - 1, j) -= 2
            _hillMap0(i, j) -= 2
            _hillMap0(i, j + 1) -= 2
            _hillMap0(i + 1, j + 1) -= 2
            _hillMap0(i - 1, j + 1) -= 2
            _hillMap0(i + 1, j) -= 2
            'Стирание дальней границы
            _hillMap0(i, j - 2) -= 1
            _hillMap0(i - 2, j - 2) -= 1
            _hillMap0(i + 2, j - 2) -= 1
            _hillMap0(i - 2, j) -= 1
            _hillMap0(i, j + 2) -= 1
            _hillMap0(i + 2, j + 2) -= 1
            _hillMap0(i - 2, j + 2) -= 1
            _hillMap0(i + 2, j) -= 1
            _hillMap0(i - 2, j + 1) -= 1
            _hillMap0(i - 2, j - 1) -= 1
            _hillMap0(i + 2, j + 1) -= 1
            _hillMap0(i + 2, j - 1) -= 1
            _hillMap0(i - 1, j + 2) -= 1
            _hillMap0(i - 1, j - 2) -= 1
            _hillMap0(i + 1, j + 2) -= 1
            _hillMap0(i + 1, j - 2) -= 1
          Catch ex As Exception

          End Try

        Else

          If i = 0 Or i = 15 Or j = 0 Or j = 31 Then
            _txtRGB.TxtRGB("Black", "Cyan", "▓", False)
          Else
            Try
              Console.CursorVisible = False
              If _hillMap0(i, j) = 2 Then _txtRGB.TxtRGB("DarkGray", "Black", "░", False) 'Туман неизведанного
              If _hillMap0(i, j) = 1 Then _txtRGB.TxtRGB("DarkGray", "White", "▓", False) 'Край тумана
              If _hillMap0(i, j) <= 0 Then
                Console.CursorVisible = False
                If _local0(i, j) = 0 Then _txtRGB.TxtRGB("DarkGreen", "DarkGray", "░", False)
                If _local0(i, j) = 1 Then _txtRGB.TxtRGB("DarkYellow", "Black", "░", False)
                If _local0(i, j) = 2 Then _txtRGB.TxtRGB("Red", "Black", "░", False)
              End If
            Catch ex As Exception

            End Try

          End If
        End If
      Next
      Console.WriteLine("  ")
      Console.Write("              ")
    Next
  End Sub

  Public Sub MapSet(ByVal _x As Integer, ByVal _y As Integer) 'Локация 1
    Dim i, j As Integer
    _nameLocation = " "
    _messegLocation = " "
    Console.Write("              ")

    For i = 0 To 16
      For j = 0 To 50
        If _x = j And _y = i Then
          Console.CursorVisible = False
          _txtRGB.TxtRGB(fontprint, backprint, printset, False)

          If _local1(i, j) = 0 Then
            _nameLocation = "Мягкая земля" 'Болотное поле 
            _messegLocation = "                                                "
          End If
          If _local1(i, j) = 1 Then
            _nameLocation = "Торфяная дорога" 'Дорожка
            _messegLocation = "                                                           "
          End If
          If _local1(i, j) = 2 Then
            _nameLocation = "Торфяная дорога" 'Край дорожки
            _messegLocation = "                                                           "
          End If
          If _local1(i, j) = 3 Then
            _nameLocation = "Болото" 'Болото
            _messegLocation = "Ощущение, будто весь мир под вами медленно прогинается...                                                           "
          End If
          If _local1(i, j) = 4 Then
            _nameLocation = "Заброшенная широкая башня"
            _messegLocation = "                                                           "
          End If
          If _local1(i, j) = 5 Then
            _nameLocation = "Заброшенная широкая башня"
            _messegLocation = "Здесь пахнет ногами тролля...                                                           "
          End If
          If _local1(i, j) = 6 Then
            _nameLocation = "Заброшенная деревня"
            _messegLocation = "Должно быть, все ушли в соседний город.                                                           "
          End If
          If _local1(i, j) = 7 Then
            _nameLocation = "Глубокое болото"
            _messegLocation = "Вас тянет зыбкая вязь. И зачем вы полезли туда...                                                           "
          End If
          If _local1(i, j) = 8 Then
            _nameLocation = "Край болота"
            _messegLocation = "Земля тут мягче, ваши ноги вязнут в грязи.                                                           "
          End If


          Try
            'Стирание ближней границы
            _hillStatic(i, j - 1) -= 2
            _hillStatic(i - 1, j - 1) -= 2
            _hillStatic(i + 1, j - 1) -= 2
            _hillStatic(i - 1, j) -= 2
            _hillStatic(i, j) -= 2
            _hillStatic(i, j + 1) -= 2
            _hillStatic(i + 1, j + 1) -= 2
            _hillStatic(i - 1, j + 1) -= 2
            _hillStatic(i + 1, j) -= 2
            'Стирание дальней границы
            _hillStatic(i, j - 2) -= 1
            _hillStatic(i - 2, j - 2) -= 1
            _hillStatic(i + 2, j - 2) -= 1
            _hillStatic(i - 2, j) -= 1
            _hillStatic(i, j + 2) -= 1
            _hillStatic(i + 2, j + 2) -= 1
            _hillStatic(i - 2, j + 2) -= 1
            _hillStatic(i + 2, j) -= 1
            _hillStatic(i - 2, j + 1) -= 1
            _hillStatic(i - 2, j - 1) -= 1
            _hillStatic(i + 2, j + 1) -= 1
            _hillStatic(i + 2, j - 1) -= 1
            _hillStatic(i - 1, j + 2) -= 1
            _hillStatic(i - 1, j - 2) -= 1
            _hillStatic(i + 1, j + 2) -= 1
            _hillStatic(i + 1, j - 2) -= 1
          Catch ex As Exception

          End Try

        Else
          If i = 0 Or i = 16 Or j = 0 Or j = 50 Then
            Console.CursorVisible = False
            _txtRGB.TxtRGB("Black", "Cyan", "▓", False)
          Else
            Try
              Console.CursorVisible = False
              If _hillStatic(i, j) = 2 Then _txtRGB.TxtRGB("DarkGray", "Black", "░", False)
              If _hillStatic(i, j) = 1 Then _txtRGB.TxtRGB("DarkGray", "White", "▓", False)
              If _hillStatic(i, j) <= 0 Then 'Верни на 0
                Console.CursorVisible = False
                If _local1(i, j) = 0 Then _txtRGB.TxtRGB("DarkGreen", "DarkGray", "░", False) 'Земля
                If _local1(i, j) = 1 Then _txtRGB.TxtRGB("DarkYellow", "DarkGray", "▓", False) 'Дорога
                If _local1(i, j) = 2 Then _txtRGB.TxtRGB("DarkYellow", "DarkGray", "▒", False) 'Край дороги
                If _local1(i, j) = 3 Then _txtRGB.TxtRGB("DarkGreen", "Black", "▒", False)  'Болото
                If _local1(i, j) = 4 Then _txtRGB.TxtRGB("Black", "DarkMagenta", "▓", False) 'Стена башни
                If _local1(i, j) = 5 Then _txtRGB.TxtRGB("Black", "DarkGray", "░", False) 'Пол башни
                If _local1(i, j) = 6 Then _txtRGB.TxtRGB("DarkRed", "Black", "▓", False) 'Заброшенная деревня
                If _local1(i, j) = 7 Then _txtRGB.TxtRGB("DarkGreen", "Black", "░", False) 'Дно болота
                If _local1(i, j) = 8 Then _txtRGB.TxtRGB("Black", "DarkGray", "░", False) 'Край болота
              End If
            Catch ex As Exception

            End Try

          End If
        End If
      Next
      Console.WriteLine("  ")
      Console.Write("              ")
    Next
  End Sub

  Public Sub MapSet2(ByVal _x As Integer, ByVal _y As Integer) 'Локация 2
    Dim i, j As Integer
    _nameLocation = " "
    _messegLocation = " "
    Console.Write("              ")

    For i = 0 To 16
      For j = 0 To 50
        If _x = j And _y = i Then
          Console.CursorVisible = False
          _txtRGB.TxtRGB(fontprint, backprint, printset, False)

          If _local2(i, j) = 0 Then
            _nameLocation = "Мягкая земля" 'Болотное поле 
            _messegLocation = "                                                "
          End If
          If _local2(i, j) = 1 Then
            _nameLocation = "Торфяная дорога" 'Дорожка
            _messegLocation = "                                                           "
          End If
          If _local2(i, j) = 2 Then
            _nameLocation = "Торфяная дорога" 'Край дорожки
            _messegLocation = "                                                           "
          End If
          If _local2(i, j) = 3 Then
            _nameLocation = "Болото" 'Болото
            _messegLocation = "Ощущение, будто весь мир под вами медленно прогинается...                                                           "
          End If
          If _local2(i, j) = 4 Then
            _nameLocation = "Стены города"
            _messegLocation = "                                                           "
          End If
          If _local2(i, j) = 5 Then
            _nameLocation = "Заброшенная широкая башня"
            _messegLocation = "Здесь пахнет ногами тролля...                                                           "
          End If
          If _local2(i, j) = 6 Then
            _nameLocation = "Заброшенная деревня"
            _messegLocation = "Должно быть, все ушли в соседний город.                                                           "
          End If
          If _local2(i, j) = 7 Then
            _nameLocation = "Глубокое болото"
            _messegLocation = "Вас тянет зыбкая вязь. И зачем вы полезли туда...                                                           "
          End If
          If _local2(i, j) = 8 Then
            _nameLocation = "Водянистая земля"
            _messegLocation = "Земля тут мягче, ваши ноги вязнут в грязи.                                                           "
          End If
          If _local2(i, j) = 9 Then
            _nameLocation = "Течение реки"
            _messegLocation = "Вода стремительно уходит у вас из под ног, тут нечего ловить.                                                           "
          End If
          If _local2(i, j) = 10 Then
            _nameLocation = "Мелководье"
            _messegLocation = "                                                                                                                     "
          End If
          If _local2(i, j) = 11 Then
            _nameLocation = "Город одичалых"
            _messegLocation = "Для взода нажмите на клавишу E.                                                                                                                     "
          End If

          Try
            'Стирание ближней границы
            _hillStatic(i, j - 1) -= 2
            _hillStatic(i - 1, j - 1) -= 2
            _hillStatic(i + 1, j - 1) -= 2
            _hillStatic(i - 1, j) -= 2
            _hillStatic(i, j) -= 2
            _hillStatic(i, j + 1) -= 2
            _hillStatic(i + 1, j + 1) -= 2
            _hillStatic(i - 1, j + 1) -= 2
            _hillStatic(i + 1, j) -= 2
            'Стирание дальней границы
            _hillStatic(i, j - 2) -= 1
            _hillStatic(i - 2, j - 2) -= 1
            _hillStatic(i + 2, j - 2) -= 1
            _hillStatic(i - 2, j) -= 1
            _hillStatic(i, j + 2) -= 1
            _hillStatic(i + 2, j + 2) -= 1
            _hillStatic(i - 2, j + 2) -= 1
            _hillStatic(i + 2, j) -= 1
            _hillStatic(i - 2, j + 1) -= 1
            _hillStatic(i - 2, j - 1) -= 1
            _hillStatic(i + 2, j + 1) -= 1
            _hillStatic(i + 2, j - 1) -= 1
            _hillStatic(i - 1, j + 2) -= 1
            _hillStatic(i - 1, j - 2) -= 1
            _hillStatic(i + 1, j + 2) -= 1
            _hillStatic(i + 1, j - 2) -= 1
          Catch ex As Exception

          End Try

        Else
          If i = 0 Or i = 16 Or j = 0 Or j = 50 Then
            Console.CursorVisible = False
            _txtRGB.TxtRGB("Black", "Cyan", "▓", False)
          Else
            Try
              Console.CursorVisible = False
              If _hillStatic(i, j) = 2 Then _txtRGB.TxtRGB("DarkGray", "Black", "░", False)
              If _hillStatic(i, j) = 1 Then _txtRGB.TxtRGB("DarkGray", "White", "▓", False)
              If _hillStatic(i, j) <= 0 Then 'Верни на 0
                Console.CursorVisible = False
                If _local2(i, j) = 0 Then _txtRGB.TxtRGB("DarkGreen", "DarkGray", "░", False) 'Земля
                If _local2(i, j) = 1 Then _txtRGB.TxtRGB("DarkYellow", "DarkGray", "▓", False) 'Дорога
                If _local2(i, j) = 2 Then _txtRGB.TxtRGB("DarkYellow", "DarkGray", "▒", False) 'Край дороги
                If _local2(i, j) = 3 Then _txtRGB.TxtRGB("DarkGreen", "Black", "▒", False)  'Болото
                If _local2(i, j) = 4 Then _txtRGB.TxtRGB("Black", "DarkMagenta", "▓", False) 'Стена башни
                If _local2(i, j) = 5 Then _txtRGB.TxtRGB("Black", "DarkGray", "░", False) 'Пол башни
                If _local2(i, j) = 6 Then _txtRGB.TxtRGB("DarkRed", "Black", "▓", False) 'Заброшенная деревня
                If _local2(i, j) = 7 Then _txtRGB.TxtRGB("DarkGreen", "Black", "░", False) 'Дно болота
                If _local2(i, j) = 8 Then _txtRGB.TxtRGB("Black", "DarkGray", "░", False) 'Край болота
                If _local2(i, j) = 9 Then _txtRGB.TxtRGB("White", "DarkBlue", "░", False) 'Водная местность
                If _local2(i, j) = 10 Then _txtRGB.TxtRGB("White", "Cyan", "░", False) 'Речная местность
                If _local2(i, j) = 11 Then _txtRGB.TxtRGB("DarkRed", "DarkYellow", "▓", False) 'Лава
              End If
            Catch ex As Exception

            End Try

          End If
        End If
      Next
      Console.WriteLine("                                  ")
      Console.Write("              ")
    Next
  End Sub

  Public Sub MapSet3(ByVal _x As Integer, ByVal _y As Integer) 'Локация 3
    Dim i, j As Integer
    _nameLocation = " "
    _messegLocation = " "
    Console.Write("              ")


    For i = 0 To 16
      For j = 0 To 50
        If _x = j And _y = i Then
          Console.CursorVisible = False
          _txtRGB.TxtRGB(fontprint, backprint, printset, False)

          If _local3(i, j) = 0 Then
            _nameLocation = "  ║Гнилистые леса:  Мягкая земля" 'Болотное поле 
            _messegLocation = "                                                "
          End If
          If _local3(i, j) = 1 Then
            _nameLocation = "  ║Торфяная протоптанная дорога" 'Дорожка
            _messegLocation = "                                                           "
          End If
          If _local3(i, j) = 2 Then
            _nameLocation = "  ║Край торфяной дороги" 'Край дорожки
            _messegLocation = "                                                           "
          End If
          If _local3(i, j) = 3 Then
            _nameLocation = "  ║Безупречный лес: Нетронутые рощи  " 'Болото
            _messegLocation = "Деревья этого леса на столько прекрасны, что вы не смеете их трогать.                                                           "
          End If
          If _local3(i, j) = 4 Then
            _nameLocation = "  ║Безупречный лес: Покинутые эльфийские заставы  "
            _messegLocation = "Барикады в руинах. Должно быть, им больше лет, чем вам.                                                           "
          End If
          If _local3(i, j) = 8 Then
            _nameLocation = "  ║Водянистая земля"
            _messegLocation = "Земля тут мягче, ваши ноги вязнут в грязи.                                                           "
          End If
          If _local3(i, j) = 9 Then
            _nameLocation = "  ║Течение реки"
            _messegLocation = "Вода стремительно уходит у вас из под ног, тут нечего ловить.                                                           "
          End If
          If _local3(i, j) = 10 Then
            _nameLocation = "  ║Мелководье"
            _messegLocation = "                                                                                                                     "
          End If



          Try
            'Стирание ближней границы
            _hillStatic(i, j - 1) -= 2
            _hillStatic(i - 1, j - 1) -= 2
            _hillStatic(i + 1, j - 1) -= 2
            _hillStatic(i - 1, j) -= 2
            _hillStatic(i, j) -= 2
            _hillStatic(i, j + 1) -= 2
            _hillStatic(i + 1, j + 1) -= 2
            _hillStatic(i - 1, j + 1) -= 2
            _hillStatic(i + 1, j) -= 2
            'Стирание дальней границы
            _hillStatic(i, j - 2) -= 1
            _hillStatic(i - 2, j - 2) -= 1
            _hillStatic(i + 2, j - 2) -= 1
            _hillStatic(i - 2, j) -= 1
            _hillStatic(i, j + 2) -= 1
            _hillStatic(i + 2, j + 2) -= 1
            _hillStatic(i - 2, j + 2) -= 1
            _hillStatic(i + 2, j) -= 1
            _hillStatic(i - 2, j + 1) -= 1
            _hillStatic(i - 2, j - 1) -= 1
            _hillStatic(i + 2, j + 1) -= 1
            _hillStatic(i + 2, j - 1) -= 1
            _hillStatic(i - 1, j + 2) -= 1
            _hillStatic(i - 1, j - 2) -= 1
            _hillStatic(i + 1, j + 2) -= 1
            _hillStatic(i + 1, j - 2) -= 1
          Catch ex As Exception

          End Try

        Else
          If i = 0 Or i = 16 Or j = 0 Or j = 50 Then
            Console.CursorVisible = False
            _txtRGB.TxtRGB("Black", "Cyan", "▓", False)
          Else
            Try
              Console.CursorVisible = False
              If _hillStatic(i, j) = 2 Then _txtRGB.TxtRGB("DarkGray", "Black", "░", False)
              If _hillStatic(i, j) = 1 Then _txtRGB.TxtRGB("DarkGray", "White", "▓", False)
              If _hillStatic(i, j) <= 0 Then 'Верни на 0
                Console.CursorVisible = False
                If _local3(i, j) = 0 Then _txtRGB.TxtRGB("DarkGreen", "DarkGray", "░", False) 'Земля
                If _local3(i, j) = 1 Then _txtRGB.TxtRGB("DarkYellow", "DarkGray", "▓", False) 'Дорога
                If _local3(i, j) = 2 Then _txtRGB.TxtRGB("DarkYellow", "DarkGray", "▒", False) 'Край дороги
                If _local3(i, j) = 3 Then _txtRGB.TxtRGB("Cyan", "DarkGreen", "░", False) 'Лес
                If _local3(i, j) = 4 Then _txtRGB.TxtRGB("DarkGreen", "Black", "░", False) 'Стены городов Эльфов 
                If _local3(i, j) = 8 Then _txtRGB.TxtRGB("Black", "DarkGray", "░", False) 'Край болота
                If _local3(i, j) = 9 Then _txtRGB.TxtRGB("White", "DarkBlue", "░", False) 'Водная местность
                If _local3(i, j) = 10 Then _txtRGB.TxtRGB("White", "Cyan", "░", False) 'Речная местность
              End If
            Catch ex As Exception

            End Try

          End If
        End If
      Next
      Console.WriteLine("                                  ")
      Console.Write("              ")
    Next
  End Sub

  Public Sub MapSet4(ByVal _x As Integer, ByVal _y As Integer) 'Локация 4
    Dim i, j As Integer
    _nameLocation = " "
    _messegLocation = " "
    Console.Write("              ")

    For i = 0 To 16
      For j = 0 To 50
        If _x = j And _y = i Then
          Console.CursorVisible = False
          _txtRGB.TxtRGB(fontprint, backprint, printset, False)

          If _local4(i, j) = 3 Then
            _nameLocation = "  ║Безупречный лес: Нетронутые рощи  " 'Болото
            _messegLocation = "Деревья этого леса на столько прекрасны, что вы не смеете их трогать.                                                           "
          End If

          Try
            'Стирание ближней границы
            _hillStatic(i, j - 1) -= 2
            _hillStatic(i - 1, j - 1) -= 2
            _hillStatic(i + 1, j - 1) -= 2
            _hillStatic(i - 1, j) -= 2
            _hillStatic(i, j) -= 2
            _hillStatic(i, j + 1) -= 2
            _hillStatic(i + 1, j + 1) -= 2
            _hillStatic(i - 1, j + 1) -= 2
            _hillStatic(i + 1, j) -= 2
            'Стирание дальней границы
            _hillStatic(i, j - 2) -= 1
            _hillStatic(i - 2, j - 2) -= 1
            _hillStatic(i + 2, j - 2) -= 1
            _hillStatic(i - 2, j) -= 1
            _hillStatic(i, j + 2) -= 1
            _hillStatic(i + 2, j + 2) -= 1
            _hillStatic(i - 2, j + 2) -= 1
            _hillStatic(i + 2, j) -= 1
            _hillStatic(i - 2, j + 1) -= 1
            _hillStatic(i - 2, j - 1) -= 1
            _hillStatic(i + 2, j + 1) -= 1
            _hillStatic(i + 2, j - 1) -= 1
            _hillStatic(i - 1, j + 2) -= 1
            _hillStatic(i - 1, j - 2) -= 1
            _hillStatic(i + 1, j + 2) -= 1
            _hillStatic(i + 1, j - 2) -= 1
          Catch ex As Exception

          End Try

        Else
          If i = 0 Or i = 16 Or j = 0 Or j = 50 Then
            Console.CursorVisible = False
            _txtRGB.TxtRGB("Black", "Cyan", "▓", False)
          Else
            Try
              Console.CursorVisible = False
              If _hillStatic(i, j) = 2 Then _txtRGB.TxtRGB("DarkGray", "Black", "░", False)
              If _hillStatic(i, j) = 1 Then _txtRGB.TxtRGB("DarkGray", "White", "▓", False)
              If _hillStatic(i, j) <= 0 Then 'Верни на 0
                Console.CursorVisible = False
                If _local4(i, j) = 0 Then _txtRGB.TxtRGB("DarkGreen", "DarkGray", "░", False) 'Земля
                If _local4(i, j) = 1 Then _txtRGB.TxtRGB("DarkYellow", "DarkGray", "▓", False) 'Дорога
                If _local4(i, j) = 2 Then _txtRGB.TxtRGB("DarkYellow", "DarkGray", "▒", False) 'Край дороги
                If _local4(i, j) = 3 Then _txtRGB.TxtRGB("Cyan", "DarkGreen", "░", False) 'Лес
                If _local4(i, j) = 4 Then _txtRGB.TxtRGB("DarkGreen", "Black", "░", False) 'Стены городов Эльфов 
                If _local4(i, j) = 8 Then _txtRGB.TxtRGB("Black", "DarkGray", "░", False) 'Край болота
                If _local4(i, j) = 9 Then _txtRGB.TxtRGB("White", "DarkBlue", "░", False) 'Водная местность
                If _local4(i, j) = 10 Then _txtRGB.TxtRGB("White", "Cyan", "░", False) 'Речная местность
              End If
            Catch ex As Exception

            End Try

          End If
        End If
      Next
      Console.WriteLine("                                  ")
      Console.Write("              ")
    Next
  End Sub

  Public Sub PersonPrint(ByVal font As String, ByVal back As String, ByVal Pset As Integer)

    Select Case font
      Case "Воин"
        fontprint = "DarkRed"
      Case "Маг"
        fontprint = "Blue"
      Case "Лучник"
        fontprint = "Green"
      Case "Плут"
        fontprint = "Yellow"
    End Select

    Select Case back
      Case "Человек"
        backprint = "DarkYellow"
      Case "Эльф"
        backprint = "DarkBlue"
      Case "Дворф"
        backprint = "DarkGray"
    End Select

    If Pset > 0 And Pset <= 4 Then printset = "█"
    If Pset > 4 And Pset <= 9 Then printset = "┼"
    If Pset > 9 And Pset <= 12 Then printset = "╫"
    If Pset > 12 Then printset = "╬"

  End Sub

  Public Sub Minimapcityes()

  End Sub

End Class
